// Code generated by ent, DO NOT EDIT.

package clip

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the clip type in the database.
	Label = "clip"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldAudioPath holds the string denoting the audio_path field in the database.
	FieldAudioPath = "audio_path"
	// FieldVideoPath holds the string denoting the video_path field in the database.
	FieldVideoPath = "video_path"
	// FieldGenCaptionsPath holds the string denoting the gen_captions_path field in the database.
	FieldGenCaptionsPath = "gen_captions_path"
	// FieldGenRawVideoPath holds the string denoting the gen_raw_video_path field in the database.
	FieldGenRawVideoPath = "gen_raw_video_path"
	// FieldGenTrimmedVideoPath holds the string denoting the gen_trimmed_video_path field in the database.
	FieldGenTrimmedVideoPath = "gen_trimmed_video_path"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// Table holds the table name of the clip in the database.
	Table = "clips"
)

// Columns holds all SQL columns for clip fields.
var Columns = []string{
	FieldID,
	FieldHash,
	FieldAudioPath,
	FieldVideoPath,
	FieldGenCaptionsPath,
	FieldGenRawVideoPath,
	FieldGenTrimmedVideoPath,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the Clip queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByHash orders the results by the hash field.
func ByHash(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHash, opts...).ToFunc()
}

// ByAudioPath orders the results by the audio_path field.
func ByAudioPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAudioPath, opts...).ToFunc()
}

// ByVideoPath orders the results by the video_path field.
func ByVideoPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVideoPath, opts...).ToFunc()
}

// ByGenCaptionsPath orders the results by the gen_captions_path field.
func ByGenCaptionsPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGenCaptionsPath, opts...).ToFunc()
}

// ByGenRawVideoPath orders the results by the gen_raw_video_path field.
func ByGenRawVideoPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGenRawVideoPath, opts...).ToFunc()
}

// ByGenTrimmedVideoPath orders the results by the gen_trimmed_video_path field.
func ByGenTrimmedVideoPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGenTrimmedVideoPath, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}
